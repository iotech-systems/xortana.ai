#!/usr/bin/env python3

import os.path
import flask, json
from PIL import Image
import setproctitle, base64
# -- [ core ] --
from shared.datatypes import *
from shared.skyCam import skyCam
from shared.sysOps import sysOps


APP_NAME = "xora-ai/web"
TCP_PORT: int = 9090
FLASK_APP = flask.Flask(APP_NAME
   , static_url_path=""
   , static_folder="www"
   , template_folder="www/templates")


CT_JSON: str = "application/json"
CT_APP_ERR: str = "text/app_error"


# -- [ app routes ] --
@FLASK_APP.route("/")
def idx():
   return FLASK_APP.send_static_file("index.html")


@FLASK_APP.route("/mbltools")
def mbltools():
   return FLASK_APP.send_static_file("mbltools.html")


@FLASK_APP.route("/cam/<camid>/<act>/<args>", methods=["GET", "POST"])
def cam_ops(camid: str, act: str, args: str):
   try:
      rval: execResult = None
      if camid == "sky":
         args = args.replace("(", "").replace(")", "").strip()
         cmd_file = f"{skyCam.RAM_DISK}/skycam/cmd.txt"
         with open(cmd_file, "w") as f:
            f.write(f"web_take_img:{args}")
      elif camid == "":
         pass
      else:
         pass
      # -- -- -- --
      return flask.Response(f"{rval}", mimetype=CT_JSON)
   except Exception as e:
      return flask.Response(str(e), mimetype=CT_APP_ERR)


""" 
   [ view folders ] 
   /view/tf/thums
   /opt/xortana.ai/tf/thums
"""
@FLASK_APP.route("/view/tf/<fld>", methods=["GET"])
def view_tf_folder(fld: str):
   fpath: str = f"/opt/xortana.ai/tf/{fld}"
   err, lst = sysOps.folder_files(fpath=fpath)
   print([err, lst])
   if err == 0:
      js_str: str = json.dumps(lst)
      return flask.Response(js_str, mimetype=CT_JSON)
   else:
      return flask.Response("FolderReadError", mimetype=CT_APP_ERR)


"""
   <img src="data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUA
    AAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO
        9TXL0Y4OHwAAAABJRU5ErkJggg==" alt="Red dot" />
"""
@FLASK_APP.route("/load/tf/img/<fld>/<img>", methods=["GET"])
def load_img(fld: str, img: str):
   fpath: str = f"/opt/xortana.ai/tf/{fld}/{img}"
   if not os.path.exists(fpath):
      return flask.Response("FolderReadError", mimetype=CT_APP_ERR)
   # -- -- -- --
   with open(fpath, "r") as f:
      enc_img = base64.b64encode(f.read())
   # -- -- -- --
   return flask.Response(enc_img, mimetype="img/base64")


# = = = = = = = = = = = = = = = = = = = =
# -- -- -- -- [ entry point ] -- -- -- --
if __name__ == "__main__":
   setproctitle.setproctitle(APP_NAME)
   FLASK_APP.run(host="0.0.0.0", port=TCP_PORT, debug=True, use_reloader=False)
